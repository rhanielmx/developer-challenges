generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  firstName String
  lastName  String
  email     String   @unique
  password  String
  avatarUrl String?
  createdAt DateTime @default(now()) @map("created_at")

  machines Machine[]
}

enum MachineType {
  PUMP
  FAN
}

enum MachineStatus {
  ACTIVE
  INACTIVE
  ERROR
}

model Machine {
  id        String        @id @default(uuid())
  name      String
  type      MachineType
  status    MachineStatus @default(ACTIVE)
  createdAt DateTime      @default(now()) @map("created_at")
  updatedAt DateTime?     @updatedAt @map("updated_at")

  ownedBy User   @relation(fields: [ownerId], references: [id])
  ownerId String @map("owner_id")

  monitoringPoints MonitoringPoint[]
}

enum SensorModel {
  TCAG @map("TcAg")
  TCAS @map("TcAs")
  HF   @map("HF+")
}

enum SensorStatus {
  ACTIVE
  INACTIVE
}

model Sensor {
  id        String       @id @default(uuid())
  name      String
  model     SensorModel
  status    SensorStatus @default(INACTIVE)
  createdAt DateTime     @default(now()) @map("created_at")

  monitoringPoint   MonitoringPoint @relation(fields: [monitoringPointId], references: [id])
  monitoringPointId String          @unique
}

model MonitoringPoint {
  id        String    @id @default(uuid())
  name      String
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  machine   Machine @relation(fields: [machineId], references: [id])
  machineId String  @map("machine_id")

  sensor Sensor?
}
